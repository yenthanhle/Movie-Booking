<div class="container">
    <form id="form-create-timeline" class="form-inline" method="POST" action="/stored/timelines/create">
        <div class="form-group col-md-10 mt-4 form-row">
            <label for="user_name" class="label">Chọn rạp</label>
            <select name='theater_id' class="form-control" id="theater">
                {{#each results.theaterList}}
                <option value={{this._id}}>{{this.name}}</option>
                {{/each}}
            </select>
        </div>
        <div class="form-group col-md-10 mt-4 form-row">
            <label for="user_name" class="label">Chọn phim</label>
            <select name="movie_id" class="form-control">
                {{#each results.movieList}}
                <option value={{this._id}} name="movie_id">{{this.name}}</option>
                {{/each}}
            </select>
        </div>
        <div class="form-group col-md-10 mt-4 form-row">
            <div class="form-field form-group col-5">
                <label class="label">Ngày chiếu</label>
                <input id="date" type="date" class="form-control" name="date" required>
                <div class="invalid-feedback form-message"></div>

            </div>
        </div>
        <div class="form-group col-md-10 mt-4 form-row">
            <div class="form-field col-5">
                <label class="label">Giờ chiếu</label>
                <input id="time" type="time" class="form-control" name="time" required>
                <div class="invalid-feedback form-message"></div>

            </div>
        </div>

        <div class="form-group col-md-10 mt-4 form-row">
            <div class="form-field col-5">
                <label class="label">Phòng</label>
                <input id="room" type="number" class="form-control" name="room" required>
                <div class="invalid-feedback form-message"></div>
            </div>
        </div>
        <div class="form-group col-md-10 mt-4 form-row">
            <button type="submit" class="btn btn-success">Tạo lịch chiếu</button>
        </div>
    </form>
</div>
<script src="/validators/loginValidator.js"></script>
<script>
    Validator({
        form: '#form-create-timeline',
        errorSelector: '.form-message',
        rules: [
            Validator.isRequired('#date', 'Chọn ngày'),
            Validator.isRequired('#time', 'Chọn giờ'),
            Validator.isRequired('#room', 'Chọn phòng'),

        ]
    })
</script>

<style>
    .select-panel {
        position: relative;
        display: flex;
        width: auto;
        width: 30%;
    }

    .select-panel select {
        display: none;
        /*hide original SELECT element: */
    }

    .select-selected {
        background-color: white;
    }

    /* Style the arrow inside the select element: */
    .select-selected:after {
        position: absolute;
        content: "";
        top: 14px;
        right: 10px;
        width: 0;
        height: 0;
        border: 6px solid transparent;
        border-color: black transparent transparent transparent;
    }

    /* Point the arrow upwards when the select box is open (active): */
    .select-selected.select-arrow-active:after {
        border-color: transparent transparent black transparent;
        top: 7px;
    }

    /* style the items (options), including the selected item: */
    .select-items div,
    .select-selected {
        color: black;
        padding: 8px 16px;
        border: 1px solid transparent;
        border-color: transparent transparent rgba(0, 0, 0, 0.1) transparent;
        cursor: pointer;
    }

    /* Style items (options): */
    .select-items {
        position: absolute;
        background-color: white;
        top: 100%;
        left: 0;
        right: 0;
        z-index: 99;
    }

    /* Hide the items when the select box is closed: */
    .select-hide {
        display: none;
    }

    .select-items div:hover,
    .same-as-selected {
        background-color: rgba(236, 195, 195, 0.1);
    }
</style>

<script>
    var x, i, j, l, ll, selElmnt, a, b, c;
    /* Look for any elements with the class "select-panel": */
    x = document.getElementsByClassName("select-panel");
    l = x.length;
    for (i = 0; i < l; i++) {
        selElmnt = x[i].getElementsByTagName("select")[0];
        ll = selElmnt.length;
        /* For each element, create a new DIV that will act as the selected item: */
        a = document.createElement("DIV");
        a.setAttribute("class", "select-selected");
        a.innerHTML = selElmnt.options[selElmnt.selectedIndex].innerHTML;
        x[i].appendChild(a);
        /* For each element, create a new DIV that will contain the option list: */
        b = document.createElement("DIV");
        b.setAttribute("class", "select-items select-hide");
        for (j = 1; j < ll; j++) {
            /* For each option in the original select element,
            create a new DIV that will act as an option item: */
            c = document.createElement("DIV");
            c.innerHTML = selElmnt.options[j].innerHTML;
            c.addEventListener("click", function (e) {
                /* When an item is clicked, update the original select box,
                and the selected item: */
                var y, i, k, s, h, sl, yl;
                s = this.parentNode.parentNode.getElementsByTagName("select")[0];
                sl = s.length;
                h = this.parentNode.previousSibling;
                for (i = 0; i < sl; i++) {
                    if (s.options[i].innerHTML == this.innerHTML) {
                        s.selectedIndex = i;
                        h.innerHTML = this.innerHTML;
                        y = this.parentNode.getElementsByClassName("same-as-selected");
                        yl = y.length;
                        for (k = 0; k < yl; k++) {
                            y[k].removeAttribute("class");
                        }
                        this.setAttribute("class", "same-as-selected");
                        break;
                    }
                }
                h.click();
            });
            b.appendChild(c);
        }
        x[i].appendChild(b);
        a.addEventListener("click", function (e) {
            /* When the select box is clicked, close any other select boxes,
            and open/close the current select box: */
            e.stopPropagation();
            closeAllSelect(this);
            this.nextSibling.classList.toggle("select-hide");
            this.classList.toggle("select-arrow-active");
        });
    }

    function closeAllSelect(elmnt) {
        /* A function that will close all select boxes in the document,
        except the current select box: */
        var x, y, i, xl, yl, arrNo = [];
        x = document.getElementsByClassName("select-items");
        y = document.getElementsByClassName("select-selected");
        xl = x.length;
        yl = y.length;
        for (i = 0; i < yl; i++) {
            if (elmnt == y[i]) {
                arrNo.push(i)
            } else {
                y[i].classList.remove("select-arrow-active");
            }
        }
        for (i = 0; i < xl; i++) {
            if (arrNo.indexOf(i)) {
                x[i].classList.add("select-hide");
            }
        }
    }

    /* If the user clicks anywhere outside the select box,
    then close all select boxes: */
    document.addEventListener("click", closeAllSelect);
</script>